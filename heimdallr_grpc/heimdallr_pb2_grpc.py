# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from heimdallr_grpc import heimdallr_pb2 as heimdallr__grpc_dot_heimdallr__pb2


class idaRPCStub(object):
    """The IDA service definition.

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.disasmGoTo = channel.unary_unary(
                '/heimdallr_grpc.idaRPC/disasmGoTo',
                request_serializer=heimdallr__grpc_dot_heimdallr__pb2.GoToRequest.SerializeToString,
                response_deserializer=heimdallr__grpc_dot_heimdallr__pb2.ResponseCode.FromString,
                )
        self.pseudoGoTo = channel.unary_unary(
                '/heimdallr_grpc.idaRPC/pseudoGoTo',
                request_serializer=heimdallr__grpc_dot_heimdallr__pb2.GoToRequest.SerializeToString,
                response_deserializer=heimdallr__grpc_dot_heimdallr__pb2.ResponseCode.FromString,
                )
        self.genericGoTo = channel.unary_unary(
                '/heimdallr_grpc.idaRPC/genericGoTo',
                request_serializer=heimdallr__grpc_dot_heimdallr__pb2.GoToRequest.SerializeToString,
                response_deserializer=heimdallr__grpc_dot_heimdallr__pb2.ResponseCode.FromString,
                )


class idaRPCServicer(object):
    """The IDA service definition.

    """

    def disasmGoTo(self, request, context):
        """Goto an address in file diassembly
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pseudoGoTo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def genericGoTo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_idaRPCServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'disasmGoTo': grpc.unary_unary_rpc_method_handler(
                    servicer.disasmGoTo,
                    request_deserializer=heimdallr__grpc_dot_heimdallr__pb2.GoToRequest.FromString,
                    response_serializer=heimdallr__grpc_dot_heimdallr__pb2.ResponseCode.SerializeToString,
            ),
            'pseudoGoTo': grpc.unary_unary_rpc_method_handler(
                    servicer.pseudoGoTo,
                    request_deserializer=heimdallr__grpc_dot_heimdallr__pb2.GoToRequest.FromString,
                    response_serializer=heimdallr__grpc_dot_heimdallr__pb2.ResponseCode.SerializeToString,
            ),
            'genericGoTo': grpc.unary_unary_rpc_method_handler(
                    servicer.genericGoTo,
                    request_deserializer=heimdallr__grpc_dot_heimdallr__pb2.GoToRequest.FromString,
                    response_serializer=heimdallr__grpc_dot_heimdallr__pb2.ResponseCode.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'heimdallr_grpc.idaRPC', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class idaRPC(object):
    """The IDA service definition.

    """

    @staticmethod
    def disasmGoTo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/heimdallr_grpc.idaRPC/disasmGoTo',
            heimdallr__grpc_dot_heimdallr__pb2.GoToRequest.SerializeToString,
            heimdallr__grpc_dot_heimdallr__pb2.ResponseCode.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def pseudoGoTo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/heimdallr_grpc.idaRPC/pseudoGoTo',
            heimdallr__grpc_dot_heimdallr__pb2.GoToRequest.SerializeToString,
            heimdallr__grpc_dot_heimdallr__pb2.ResponseCode.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def genericGoTo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/heimdallr_grpc.idaRPC/genericGoTo',
            heimdallr__grpc_dot_heimdallr__pb2.GoToRequest.SerializeToString,
            heimdallr__grpc_dot_heimdallr__pb2.ResponseCode.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
